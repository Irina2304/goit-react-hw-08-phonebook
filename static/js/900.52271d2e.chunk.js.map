{"version":3,"file":"static/js/900.52271d2e.chunk.js","mappings":"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","sources":["components/AddForm/AddForm.styled.js","redux/contacts/selectors.js","components/AddForm/AddForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n    gap: 15px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    max-width: 300px;\n`;\n\nexport const StyledLabel = styled.label`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 5px;\n    color: #7d6b40;\n`;\n\nexport const StyledInput = styled.input`\n    border-radius: 5px;\n    background-color: #fbf5ea;\n    border: 1px solid;\n    border-color: #efd7a0;\n    color: #7d6b40;\n    padding: 7px;\n\n`;\n\nexport const StyledBtm = styled.button`\n    border-radius: 5px;\n    background-color: #f7e3c0;\n    border: 1px solid;\n    border-color: #7d6b40;\n    color: #7d6b40;\n    padding: 5px;\n    &:hover,\n    &:focus {\n        background-color: #f0b348;\n    }\n`;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectvisibleItems = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { fetchAddContact } from 'redux/contacts/operations';\nimport Notiflix from 'notiflix';\nimport {\n  StyledForm,\n  StyledLabel,\n  StyledBtm,\n  StyledInput,\n} from './AddForm.styled';\nimport { useState } from 'react';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const AddForm = () => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n\n  const onChange = evt => {\n    let nameInput = evt.currentTarget.name;\n    const { value } = evt.currentTarget;\n    nameInput === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const newContact = {\n    name: name,\n    number: number,\n  };\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n    const checkName = contacts.find(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n    if (checkName) {\n      return Notiflix.Notify.failure(\n        `${newContact.name} is already in contacts`\n      );\n    }\n    dispatch(fetchAddContact(newContact));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <StyledForm onSubmit={onSubmit}>\n      <StyledLabel>\n        Name\n        <StyledInput\n          type=\"text\"\n          name=\"name\"\n          // pattern=\"[A-Za-z]{1,32}\"\n          value={name}\n          onChange={onChange}\n          required\n        />\n      </StyledLabel>\n      <StyledLabel>\n        tel.\n        <StyledInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?[0-9\\s\\-\\(\\)]+\"\n          value={number}\n          onChange={onChange}\n          required\n        />\n      </StyledLabel>\n      <StyledBtm type=\"submit\">Add contact</StyledBtm>\n    </StyledForm>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledItem = styled.li`\n    display: flex;\n    flex-direction: row;\n    gap: 20px;\n    align-items: center;\n    justify-content: space-between;\n`;\n\nexport const StyledText = styled.p`\n    color: #7d6b40;\n`;\n\nexport const StyledBtm = styled.button`\n    border-radius: 5px;\n    background-color: #f7e3c0;\n    border: 1px solid;\n    border-color: #7d6b40;\n    color: #7d6b40;\n    padding: 3px;\n    &:hover,\n    &:focus {\n        background-color: #f0b348;\n    }\n`;","import { StyledItem, StyledBtm, StyledText } from './ContactItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { fetchDelContact } from 'redux/contacts/operations';\n\nexport const ContactItem = ({ item }) => {\n  const dispatch = useDispatch();\n\n  const onClick = evt => {\n    dispatch(fetchDelContact(evt.currentTarget.name));\n  };\n\n  return (\n    <StyledItem>\n      <StyledText>\n        {item.name}: {item.number}\n      </StyledText>\n      <StyledBtm type=\"button\" name={item.id} onClick={onClick}>\n        delete\n      </StyledBtm>\n    </StyledItem>\n  );\n};\n","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { selectvisibleItems } from 'redux/contacts/selectors';\n\nexport const ContactsList = () => {\n  const visibleItems = useSelector(selectvisibleItems);\n\n  return (\n    <ul>\n      {visibleItems.map(item => (\n        <ContactItem key={item.id} item={item} />\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledText = styled.p`\n    color: #7d6b40;\n`;\n\nexport const StyledInput = styled.input`\n    border-radius: 5px;\n    background-color: #fbf5ea;\n    border: 1px solid;\n    border-color: #efd7a0;\n    color: #7d6b40;\n    padding: 7px;\n\n`;","import { useDispatch } from 'react-redux';\nimport { findName } from 'redux/contacts/filterSlice';\nimport { StyledInput, StyledText } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChange = evt => {\n    const filterName = evt.currentTarget.value;\n    dispatch(findName(filterName));\n  };\n\n  return (\n    <div>\n      <StyledText>Find contacts by name:</StyledText>\n      <StyledInput type=\"text\" name=\"filter\" onChange={onChange} />\n    </div>\n  );\n};\n","import { AddForm } from 'components/AddForm/AddForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAllContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { selectError } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"main-div\">\n      {isLoading && <p>Loading contacts...</p>}\n      {error && <p>{error}</p>}\n      <h1>Phonebook</h1>\n      <AddForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n}\n"],"names":["StyledForm","styled","_templateObject","_taggedTemplateLiteral","StyledLabel","_templateObject2","StyledInput","_templateObject3","StyledBtm","_templateObject4","selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","selectvisibleItems","createSelector","filter","item","name","toLowerCase","includes","AddForm","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","useSelector","onChange","evt","nameInput","currentTarget","value","newContact","reset","_jsxs","onSubmit","preventDefault","find","contact","Notiflix","concat","fetchAddContact","children","_jsx","type","required","pattern","StyledItem","StyledText","ContactItem","_ref","id","onClick","fetchDelContact","ContactsList","visibleItems","map","Filter","filterName","findName","Contacts","useEffect","fetchAllContacts","className"],"sourceRoot":""}